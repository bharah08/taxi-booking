pipeline{
    agent any
    tools{
        maven 'maven'
    }
      environment{
        SCANNER_HOME= tool 'sonar'
    }
    stages{
        stage('checkout-code'){
            steps{
              git 'https://github.com/bharah08/taxi-booking.git'
            }
        }
        stage('unit-test'){
            steps{
                sh 'mvn test'
            }
        }
        stage('build-package'){
            steps{
                sh 'mvn clean install -DskipTests=true'
            }
        }
    stage('SonarQube analysis') {
            environment {
            scannerHome = tool 'sonar'
            }
        steps { 
        withSonarQubeEnv('sonar') { // If you have configured more than one global server connection, you can specify its name
            sh "${scannerHome}/bin/sonar-scanner"
    }
  }
    }
    stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
          stage('Deploy') {
      steps {
        script{
        nexusArtifactUploader(
          nexusVersion: 'nexus3',
          protocol: 'http',
          nexusUrl: '43.204.144.20:8081',
          groupId: 'ccom.example.maven-project',
          version: '1.0-SNAPSHOT',
          repository: 'taxi-webapp',
          credentialsId: 'nexus',
          artifacts: [
              artifactId: 'maven-project',
              type: 'war',
              file: 'target/taxi-booking-1.0.1.war'
          ]
        )
      }
      }
    }
    }
    }